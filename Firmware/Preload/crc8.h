/*
 * Copyright (c) 2017 nitacku
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 * @file        crc8.h
 * @summary     8-bit CRC algorithm
 * @version     1.0
 * @author      nitacku
 * @data        20 November 2017
 */

#ifndef CRC_H_
#define CRC_H_

#include <Arduino.h>
#include <inttypes.h>

#define USING_COMPILED_CRC_TABLE

#ifdef USING_COMPILED_CRC_TABLE
static const uint8_t crc_table[256] PROGMEM =
{
    0x00, 0x09, 0x12, 0x1b, 0x1f, 0x16, 0x0d, 0x04, 0x05, 0x0c, 0x17, 0x1e, 0x1a,
    0x13, 0x08, 0x01, 0x0a, 0x03, 0x18, 0x11, 0x15, 0x1c, 0x07, 0x0e, 0x0f, 0x06,
    0x1d, 0x14, 0x10, 0x19, 0x02, 0x0b, 0x14, 0x1d, 0x06, 0x0f, 0x0b, 0x02, 0x19,
    0x10, 0x11, 0x18, 0x03, 0x0a, 0x0e, 0x07, 0x1c, 0x15, 0x1e, 0x17, 0x0c, 0x05,
    0x01, 0x08, 0x13, 0x1a, 0x1b, 0x12, 0x09, 0x00, 0x04, 0x0d, 0x16, 0x1f, 0x13,
    0x1a, 0x01, 0x08, 0x0c, 0x05, 0x1e, 0x17, 0x16, 0x1f, 0x04, 0x0d, 0x09, 0x00,
    0x1b, 0x12, 0x19, 0x10, 0x0b, 0x02, 0x06, 0x0f, 0x14, 0x1d, 0x1c, 0x15, 0x0e,
    0x07, 0x03, 0x0a, 0x11, 0x18, 0x07, 0x0e, 0x15, 0x1c, 0x18, 0x11, 0x0a, 0x03,
    0x02, 0x0b, 0x10, 0x19, 0x1d, 0x14, 0x0f, 0x06, 0x0d, 0x04, 0x1f, 0x16, 0x12,
    0x1b, 0x00, 0x09, 0x08, 0x01, 0x1a, 0x13, 0x17, 0x1e, 0x05, 0x0c, 0x1d, 0x14,
    0x0f, 0x06, 0x02, 0x0b, 0x10, 0x19, 0x18, 0x11, 0x0a, 0x03, 0x07, 0x0e, 0x15,
    0x1c, 0x17, 0x1e, 0x05, 0x0c, 0x08, 0x01, 0x1a, 0x13, 0x12, 0x1b, 0x00, 0x09,
    0x0d, 0x04, 0x1f, 0x16, 0x09, 0x00, 0x1b, 0x12, 0x16, 0x1f, 0x04, 0x0d, 0x0c,
    0x05, 0x1e, 0x17, 0x13, 0x1a, 0x01, 0x08, 0x03, 0x0a, 0x11, 0x18, 0x1c, 0x15,
    0x0e, 0x07, 0x06, 0x0f, 0x14, 0x1d, 0x19, 0x10, 0x0b, 0x02, 0x0e, 0x07, 0x1c,
    0x15, 0x11, 0x18, 0x03, 0x0a, 0x0b, 0x02, 0x19, 0x10, 0x14, 0x1d, 0x06, 0x0f,
    0x04, 0x0d, 0x16, 0x1f, 0x1b, 0x12, 0x09, 0x00, 0x01, 0x08, 0x13, 0x1a, 0x1e,
    0x17, 0x0c, 0x05, 0x1a, 0x13, 0x08, 0x01, 0x05, 0x0c, 0x17, 0x1e, 0x1f, 0x16,
    0x0d, 0x04, 0x00, 0x09, 0x12, 0x1b, 0x10, 0x19, 0x02, 0x0b, 0x0f, 0x06, 0x1d,
    0x14, 0x15, 0x1c, 0x07, 0x0e, 0x0a, 0x03, 0x18, 0x11
};
#else

static uint8_t crc_table[256];
void crc_precompute_table(void);

#endif

uint8_t crc_compute(uint8_t data[], uint32_t length);

#endif /* CRC_H_ */
